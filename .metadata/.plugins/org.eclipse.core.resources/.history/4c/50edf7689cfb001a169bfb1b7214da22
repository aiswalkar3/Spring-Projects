package com.EECS.SpringFactoryBeanDemo;

import java.security.MessageDigest;

import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.support.GenericApplicationContext;
import org.springframework.context.support.GenericXmlApplicationContext;
import org.springframework.core.io.ClassPathResource;

public class MessageDigestDemo {
	@Configuration
	static class MessageDigestDemoConfig
	{
		@Bean
		public MessageDigestFactoryBean shaDigest()
		{
			MessageDigestFactoryBean factoryOne = new MessageDigestFactoryBean();
			factoryOne.setAlgorithmName("SHA1");
			return factoryOne;
		}
		
		@Bean
		public MessageDigestFactoryBean defaultDigest()
		{
			MessageDigestFactoryBean factorySecond = new MessageDigestFactoryBean();
			return factorySecond;
		}
		
		@Bean
		public MessageDigester digester() throws Exception
		{
			MessageDigester digester = new MessageDigester();
			digester.setDigest1(shaDigest().getObject());
			digester.setDigest2(defaultDigest().getObject());
			return digester;
		}
	}
	
	public static void main(String []args)
	{
		GenericXmlApplicationContext context = new GenericXmlApplicationContext();
		context.load(new ClassPathResource("spring/app-config.xml"));
		context.refresh();
		context.getBean("shaDigest", MessageDigest.class);
		MessageDigestFactoryBean factoryBean = context.getBean("&shaDigest", MessageDigestFactoryBean.class);
		
		try {
			
		}
		catch()
		{
			
		}
	}
	
	/*Using Java configuration*/
	/*
	public static void main(String []args)
	{
		GenericApplicationContext context = 
				new AnnotationConfigApplicationContext(MessageDigestDemoConfig.class);
		
		MessageDigester digester = context.getBean("digester", MessageDigester.class);
		digester.digest("Hello World!");
		context.close();
	}
	*/
	
	/*Using XML onfiguration*/
	/*
	public static void main(String []args)
	{
		GenericXmlApplicationContext context = new GenericXmlApplicationContext();
		context.load(new ClassPathResource("spring/app-config.xml"));
		context.refresh();
		
		MessageDigester digester = context.getBean("digester",MessageDigester.class);
		digester.digest("Hello World!");
		context.close();
	}
	*/
}
